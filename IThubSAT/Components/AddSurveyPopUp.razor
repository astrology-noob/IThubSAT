@using IThubSAT.Data.Models
@inject IThubSAT.Data.SurveyService SurveyService

<div>
    @if (ShowDialog)  
    {  
        <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="titleLabel">Новый опрос</h5>
                        <button type="button" class="close" @onclick="@Close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="@NewSurvey" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <label for="title">Название: </label>
                                <InputText id="title" class="form-control" @bind-Value="@NewSurvey.Name"></InputText>
                                <ValidationMessage For="@(() => NewSurvey.Name)" />
                            </div>
                            <div class="form-group">
                                <label for="description">Описание (необязательно): </label>
                                <InputText id="description" class="form-control" @bind-Value="@NewSurvey.Description"></InputText>
                                <ValidationMessage For="@(() => NewSurvey.Description)" />
                            </div>
                            <button type="submit" class="btn btn-primary">Сохранить</button>
                            <a class="btn btn-outline-primary" @onclick="@Close">Закрыть</a>
                        </EditForm>  
                    </div>  
                </div>  
            </div>  
        </div>  
    }  
</div>

@code {
    public Survey NewSurvey { get; set; } = new(); 

    public bool ShowDialog { get; set; }
    [Parameter]  public EventCallback<int> CloseEventCallback { get; set; }  

    public void Show()
    {
        ResetDialog();
        ShowDialog = true;
        StateHasChanged();
    }

    public void Close()
    {
        ShowDialog = false;
        StateHasChanged();
    }

    private void ResetDialog()
    {
        NewSurvey = new();
    }

    protected async Task HandleValidSubmit()
    {
        int newSurveyId = await SurveyService.AddSurveyAsync(NewSurvey);
        ShowDialog = false;
        await CloseEventCallback.InvokeAsync(newSurveyId);
        StateHasChanged(); 
    }
}