@using IThubSAT.Data.Models
@using IThubSAT.Data
@using IThubSAT.Components
@inject SurveyService SurveyService

@* Сделать отдельный компонент tool bar? *@
<div class="tool-bar">
    <div class="dropdown-bars">
        <Dropdown Placeholder="Кафедра" />
        <Dropdown Placeholder="Группа/Подгруппа" />
        <Dropdown Placeholder="Дисциплина" />
        <Dropdown Placeholder="Преподаватель" />
    </div>

    <button class="primary-button">Импорт</button>
    <button class="primary-button">Экспорт</button>
</div>

@* Сделать отдельные компоненты - строка таблицы и ячейка таблицы? *@
<div class="table-wrapper">
    <div class="table is-fullwidth">
        <div class="table-row">
            <div class="table-cell">Кафедра</div>
            <div class="table-cell">Курс</div>
            <div class="table-cell">Группа</div>
            <div class="table-cell">Дисциплина</div>
            <div class="table-cell">Преподаватель</div>
            <div class="table-cell">Часы в неделю</div>
            <div class="table-cell">Часы всего</div>
        </div>
        @if (_workload.Count > 0){
            @foreach (var workloadRow in _workload) {
                <div class="table-row">
                    <div class="table-cell">(@workloadRow.Group?.Faculty.Name ?? string.Empty)</div>
                    <div class="table-cell">@workloadRow.Group?.StudyYear ?? string.Empty</div>
                    <div class="table-cell">@workloadRow.Group?.Name ?? string.Empty</div>
                    <div class="table-cell">@workloadRow.Discipline.Name</div>
                    <div class="table-cell">@workloadRow.Teacher.FirstName</div>
                    <div class="table-cell">@workloadRow.WeeklyHours</div>
                    <div class="table-cell">@workloadRow.TotalHours</div>
                </div>
            }
        }
        else {
        <div class="table-row">
            <div>Пока нет вообще никакой нагрузки</div>
        </div>
        }
    </div>
</div>

@code {
    [Parameter] public Survey Survey { get; set; } = null!;
    private List<Workload> _workload { get; set; } = new();
    
    protected async override Task OnInitializedAsync()
    {
        _workload = await SurveyService.GetWorkloadBySurveyId(Survey.Id);
        await base.OnInitializedAsync();
    }
}